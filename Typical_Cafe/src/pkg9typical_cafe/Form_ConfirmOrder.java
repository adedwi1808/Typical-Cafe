/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg9typical_cafe;

/**
 *
 * @author wolfie
 */

import Koneksi.Koneksi;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import static pkg9typical_cafe.Home.jDesktopPane;

public class Form_ConfirmOrder extends javax.swing.JInternalFrame{

    /**
     * Creates new form Form_confirmOrder
     */
    
    Connection con;
    Statement stat,stat2;
    ResultSet rs, rs2;
    String sql, sql2;
    String namaMenu;
    int harga;
    String pesananPertama, pesananKedua;
    int jumlahPertama, jumlahKedua;
    
    ArrayList<String> inventory = new ArrayList<>();
    
    //Resep Coffee Barista
    ArrayList<Integer> mocca = new ArrayList<>(Arrays.asList(1, 4, 3 , 5, 13));
    ArrayList<Integer> latte = new ArrayList<>(Arrays.asList(2, 4, 13));
    ArrayList<Integer> cappucino = new ArrayList<>(Arrays.asList(1, 5, 13));
    ArrayList<Integer> americano = new ArrayList<>(Arrays.asList(1, 13));
    ArrayList<Integer> espresso = new ArrayList<>(Arrays.asList(2, 13));
    
    //Resep Ice Coffee
    ArrayList<Integer> hazelnut = new ArrayList<>(Arrays.asList(1, 8, 5, 13, 14));
    ArrayList<Integer> clatte = new ArrayList<>(Arrays.asList(1, 9, 11, 5, 10, 13,14));
    ArrayList<Integer> vLatte = new ArrayList<>(Arrays.asList(1, 7, 5, 13, 14));
    ArrayList<Integer> ilatte = new ArrayList<>(Arrays.asList(2, 5, 13, 14));
    ArrayList<Integer> iCappucino = new ArrayList<>(Arrays.asList(1, 5, 13, 14));
    
    
    
    public Form_ConfirmOrder(String pesananPertama, String pesananKedua, int jumlahPertama, int jumlahKedua) {
        initComponents();
        
        //visibilitas komponen gui
        visibilitas();
        
        //Assigment ke variabel dalam didalam class
        this.pesananPertama = pesananPertama;
        this.pesananKedua  = pesananKedua;
        this.jumlahPertama = jumlahPertama;
        this.jumlahKedua = jumlahKedua;

        //inisialisasi koneksi
        Koneksi DB = new Koneksi();
        DB.config();
        con = DB.con;
        stat = DB.stm;
        
        checkOrder();
        
        jTF_totalHarga.setText("Rp " + hitungTotal());

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jL_pesananKedua = new javax.swing.JLabel();
        jL_pesananPertama = new javax.swing.JLabel();
        jTF_jumlahPesanan2 = new javax.swing.JTextField();
        jTF_jumlahPesanan1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTF_totalHarga = new javax.swing.JTextField();
        jL_subTotal2 = new javax.swing.JLabel();
        jL_subTotal1 = new javax.swing.JLabel();
        jL_hargaSatuan1 = new javax.swing.JLabel();
        jL_hargaSatuan2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jB_cancelOrder = new javax.swing.JButton();
        jTF_uangPelanggan = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jB_finishOrder = new javax.swing.JButton();
        jTF_namaPelanggan = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1280, 590));
        setSize(new java.awt.Dimension(1280, 589));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Confirm Order");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, 340, 74));

        jL_pesananKedua.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jL_pesananKedua.setText("Pesanan Kedua");
        getContentPane().add(jL_pesananKedua, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 240, 37));

        jL_pesananPertama.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jL_pesananPertama.setText("Pesanan Pertama");
        getContentPane().add(jL_pesananPertama, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 240, 37));

        jTF_jumlahPesanan2.setEditable(false);
        jTF_jumlahPesanan2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jTF_jumlahPesanan2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_jumlahPesanan2.setText("X2");
        jTF_jumlahPesanan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_jumlahPesanan2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTF_jumlahPesanan2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 250, 80, -1));

        jTF_jumlahPesanan1.setEditable(false);
        jTF_jumlahPesanan1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jTF_jumlahPesanan1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTF_jumlahPesanan1.setText("X2");
        jTF_jumlahPesanan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_jumlahPesanan1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTF_jumlahPesanan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 180, 80, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("Total                 :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 320, 170, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("Nama Pesanan :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 220, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setText("Jumlah :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 80, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setText("Harga Satuan :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 120, 130, -1));

        jTF_totalHarga.setEditable(false);
        jTF_totalHarga.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTF_totalHarga.setText("Rp 0");
        getContentPane().add(jTF_totalHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 310, 180, 40));

        jL_subTotal2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jL_subTotal2.setText("Rp 0");
        getContentPane().add(jL_subTotal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 250, 130, 30));

        jL_subTotal1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jL_subTotal1.setText("Rp 0");
        getContentPane().add(jL_subTotal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 180, 130, 30));

        jL_hargaSatuan1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jL_hargaSatuan1.setText("Rp 0");
        getContentPane().add(jL_hargaSatuan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 180, 130, 30));

        jL_hargaSatuan2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jL_hargaSatuan2.setText("Rp 0");
        getContentPane().add(jL_hargaSatuan2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 250, 130, 30));

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel12.setText("Harga :");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 120, 130, -1));

        jB_cancelOrder.setBackground(new java.awt.Color(255, 0, 0));
        jB_cancelOrder.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jB_cancelOrder.setForeground(new java.awt.Color(255, 255, 255));
        jB_cancelOrder.setText("Cancel");
        jB_cancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_cancelOrderActionPerformed(evt);
            }
        });
        getContentPane().add(jB_cancelOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 449, 130, 70));

        jTF_uangPelanggan.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        getContentPane().add(jTF_uangPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 360, 180, 40));

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel13.setText("Uang Pelanggan  :");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 370, 170, -1));

        jB_finishOrder.setBackground(new java.awt.Color(51, 255, 51));
        jB_finishOrder.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jB_finishOrder.setForeground(new java.awt.Color(255, 255, 255));
        jB_finishOrder.setText("Next");
        jB_finishOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_finishOrderActionPerformed(evt);
            }
        });
        getContentPane().add(jB_finishOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 180, 70));

        jTF_namaPelanggan.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        getContentPane().add(jTF_namaPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 410, 180, 40));

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel14.setText("Nama Pelanggan :");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 420, 170, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_jumlahPesanan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_jumlahPesanan2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_jumlahPesanan2ActionPerformed

    private void jTF_jumlahPesanan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_jumlahPesanan1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_jumlahPesanan1ActionPerformed

    private void jB_cancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_cancelOrderActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Batalkan Transaksi ?", "Cancel", JOptionPane.YES_NO_OPTION);
        
        if(response==JOptionPane.YES_OPTION){
            Form_Home fh = new Form_Home();
            Home.jDesktopPane.removeAll();
            Home.jDesktopPane.repaint();
            fh.setVisible(true);
            Home.jDesktopPane.add(fh);
        }
    }//GEN-LAST:event_jB_cancelOrderActionPerformed

    private void jB_finishOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_finishOrderActionPerformed
        // TODO add your handling code here:
        checkUang();
        
    }//GEN-LAST:event_jB_finishOrderActionPerformed
    
    private void visibilitas() {
        jL_pesananPertama.setVisible(false);
        jL_hargaSatuan1.setVisible(false);
        jL_subTotal1.setVisible(false);
        jTF_jumlahPesanan1.setVisible(false);
        
        jL_pesananKedua.setVisible(false);
        jL_hargaSatuan2.setVisible(false);
        jL_subTotal2.setVisible(false);
        jTF_jumlahPesanan2.setVisible(false);
    }
    
    private void setOrder(String namaMenu, String hargaMenu, int jumlahPesanan, String kategori){
        
        if(kategori.equals("Coffee Barista") || kategori.equals("Ice Coffee Solo")){
            jL_pesananPertama.setText(namaMenu);                
            jL_hargaSatuan1.setText("Rp "+ hargaMenu);
            jL_subTotal1.setText("Rp "+ hitungSubtotal(Integer.valueOf(hargaMenu), jumlahPesanan));
            jTF_jumlahPesanan1.setText("x "+ String.valueOf(jumlahPesanan));

            jL_pesananPertama.setVisible(true);
            jL_hargaSatuan1.setVisible(true);
            jL_subTotal1.setVisible(true);
            jTF_jumlahPesanan1.setVisible(true);
        }else {
            jL_pesananKedua.setText(namaMenu);
            jL_hargaSatuan2.setText("Rp "+ hargaMenu);
            jL_subTotal2.setText("Rp "+ hitungSubtotal(Integer.valueOf(hargaMenu), jumlahPesanan));
            jTF_jumlahPesanan2.setText("x "+ String.valueOf(jumlahPesanan));

            jL_pesananKedua.setVisible(true);
            jL_hargaSatuan2.setVisible(true);
            jL_subTotal2.setVisible(true);
            jTF_jumlahPesanan2.setVisible(true);
        }                
        
    }
    
    
    private void checkOrder(){
        if (pesananPertama != null && pesananKedua != null) {
            try{
                sql = "SELECT * FROM menu WHERE nama_menu='"+pesananPertama+"'";
                   rs = stat.executeQuery(sql);

                    if(rs.next()){
                        setOrder(rs.getString("nama_menu"), rs.getString("harga_menu"), jumlahPertama,"Coffee Barista");
                   }
            }catch (SQLException err) {
                JOptionPane.showMessageDialog(this, err.getMessage());
            } 

            try{
                sql = "SELECT * FROM menu WHERE nama_menu='"+pesananKedua+"'";
                   rs = stat.executeQuery(sql);

                    if(rs.next()){
                        setOrder(rs.getString("nama_menu"), rs.getString("harga_menu"), jumlahKedua,"Ice Coffee");
                   }
            }catch (SQLException err) {
                JOptionPane.showMessageDialog(this, err.getMessage());
            }
        } else if (pesananPertama != null) {
            try{
                sql = "SELECT * FROM menu WHERE nama_menu='"+pesananPertama+"'";
                   rs = stat.executeQuery(sql);

                    if(rs.next()){
                        setOrder(rs.getString("nama_menu"), rs.getString("harga_menu"), jumlahPertama,"Coffee Barista");
                   }
            }catch (SQLException err) {
                JOptionPane.showMessageDialog(this, err.getMessage());
            } 
        } else {
            try{
                sql = "SELECT * FROM menu WHERE nama_menu='"+pesananKedua+"'";
                   rs = stat.executeQuery(sql);

                    if(rs.next()){
                        setOrder(rs.getString("nama_menu"), rs.getString("harga_menu"), jumlahKedua,"Ice Coffee Solo");
                   }
            }catch (SQLException err) {
                JOptionPane.showMessageDialog(this, err.getMessage());
            }
        }
    }
    
    private int hitungSubtotal(int harga, int jumlah) {
        return harga * jumlah;
    }
    
    private int hitungTotal(){
        int a = Integer.valueOf(jL_subTotal1.getText().substring(3));
        int b = Integer.valueOf(jL_subTotal2.getText().substring(3));
        return  a + b;
    }
    
    private String hitungPembayaran(){
        String hasil;
        
        int uangPelanggan = Integer.valueOf(jTF_uangPelanggan.getText());
        if(uangPelanggan > hitungTotal()){
            hasil = "Rp " + String.valueOf(hitungTotal() - uangPelanggan).substring(1);
        } else if (uangPelanggan == hitungTotal()) {
            hasil = "Uang Pas";
        } else {
            hasil = "Uang Kurang";
        }
        return hasil;
    }
    
    private void Inventory(){
        try {
            sql = "SELECT nama_inventory FROM inventory";
            rs = stat.executeQuery(sql);
            while(rs.next()){
                inventory.add(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void UpdateInventory(String a){
        
        ArrayList bahan = CheckResep(a);
       
        for(int i=0; i<bahan.size();i++){
            try {
                    sql="UPDATE inventory SET jumlah_inventory = jumlah_inventory - 1 WHERE id_inventory ='"+bahan.get(i)+"'";
                    stat.executeUpdate(sql);         
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error input data" + e);
            }
        }
        bahan = null;
        
    }
    private ArrayList CheckResep(String a){
        ArrayList hasil = null;
        switch(a){
                case "Coffee Mocca" :
                    hasil = mocca;
                    break;
                case "Americano" :
                    hasil = americano;
                    break;
                case "Cappucino" :
                    hasil = cappucino;
                    break;
                case "Coffee Latte" :
                    hasil = latte;
                    break;
                case "Espresso" :
                    hasil = espresso;
                    break;
                case "Ice Cappucino" :
                    hasil = iCappucino;
                    break;
                case "Ice Coffee Latte" :
                    hasil = ilatte;
                    break;
                case "Ice Hazelnut Latte" :
                    hasil = hazelnut;
                    break;
                case "Ice Caramel Latte" :
                    hasil = clatte;
                    break;
                case "Ice Vanilla" :
                    hasil = vLatte;
                    break;
        }
        return hasil;    
    }
    
    
    
    private void insertTransaksi(){
        java.util.Date date = new java.util.Date();
        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
        java.sql.Time sqlTime=  new java.sql.Time(date.getTime());
        
        if(jumlahPertama != 0 && jumlahKedua != 0){
            try {
                    sql = "INSERT INTO transaksi (id_user, nama_pelanggan, menu_coffeBarista, jumlah_coffeBarista, menu_iceCoffe, jumlah_iceCoffe, total_harga, tanggal, waktu) VALUES('"+ Home.getIdUser() + "','"+ 
                            jTF_namaPelanggan.getText()+"','"+ pesananPertama+"','"+ jumlahPertama +"','"+ pesananKedua +"','"+ jumlahKedua+"','"+ hitungTotal()+"','"+ sqlDate+"','"+ sqlTime +"')";
                    
                    stat.executeUpdate(sql);         
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error input data" + e);
            }
            for (int i=0; i < jumlahPertama; i++){
                UpdateInventory(pesananPertama);
            }
            for (int i=0; i < jumlahKedua; i++){
                UpdateInventory(pesananKedua);
            }
            
        } else if (jumlahPertama != 0 && jumlahKedua == 0){
            try {
                    sql = "INSERT INTO transaksi (id_user, nama_pelanggan, menu_coffeBarista, jumlah_coffeBarista, total_harga, tanggal, waktu) VALUES('"+ Home.getIdUser() + "','"+ 
                            jTF_namaPelanggan.getText()+"','"+ pesananPertama+"','"+ jumlahPertama +"','" + hitungTotal()+"','"+ sqlDate+"','"+ sqlTime +"')";
                    
                    stat.executeUpdate(sql);         
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error input data" + e);
            }
            for (int i=0; i < jumlahPertama; i++){
                UpdateInventory(pesananPertama);
            }
        }else {
            try {
                    sql = "INSERT INTO transaksi (id_user, nama_pelanggan,  menu_iceCoffe, jumlah_iceCoffe, total_harga, tanggal, waktu) VALUES('"+ Home.getIdUser() + "','"+ 
                            jTF_namaPelanggan.getText()+"','"+ pesananKedua +"','"+ jumlahKedua +"','"+ hitungTotal()+"','"+ sqlDate+"','"+ sqlTime +"')";
                    
                    stat.executeUpdate(sql);         
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error input data" + e);
            }
            for (int i=0; i < jumlahKedua; i++){
                UpdateInventory(pesananKedua);
            }
        }
    }
    
    private void executeSQL(){
        insertTransaksi();
    }
    private void checkUang(){
        if(!jTF_uangPelanggan.getText().isBlank() && !jTF_namaPelanggan.getText().isBlank()) {
            Form_FinishPayment ffp = new Form_FinishPayment();
            if(hitungPembayaran().equals("Uang Kurang")) {
                JOptionPane.showMessageDialog(this, "Uang Kurang");    
            } else if (hitungPembayaran().substring(0, 2).equals("Rp")) {
                JOptionPane.showMessageDialog(this, "Transaksi Berhasil, kembalian pelanggan : "+ hitungPembayaran());
                executeSQL();
                jDesktopPane.removeAll();
                jDesktopPane.repaint();
                ffp.setVisible(true);
                jDesktopPane.add(ffp);
                
            } else {
                JOptionPane.showMessageDialog(this, "Transaksi Berhasil");
                executeSQL();
                jDesktopPane.removeAll();
                jDesktopPane.repaint();
                ffp.setVisible(true);
                jDesktopPane.add(ffp);
                
            }
        } else {
            JOptionPane.showMessageDialog(this, "Masukkan jumlah uang pelanggan dan Nama Pelanggan !");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_cancelOrder;
    private javax.swing.JButton jB_finishOrder;
    private javax.swing.JLabel jL_hargaSatuan1;
    private javax.swing.JLabel jL_hargaSatuan2;
    private javax.swing.JLabel jL_pesananKedua;
    private javax.swing.JLabel jL_pesananPertama;
    private javax.swing.JLabel jL_subTotal1;
    private javax.swing.JLabel jL_subTotal2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTF_jumlahPesanan1;
    private javax.swing.JTextField jTF_jumlahPesanan2;
    private javax.swing.JTextField jTF_namaPelanggan;
    private javax.swing.JTextField jTF_totalHarga;
    private javax.swing.JTextField jTF_uangPelanggan;
    // End of variables declaration//GEN-END:variables
}
